type EOS : ! ~un = {'EOS}
type End : ! ~unit = Unit

type TServer : ! ~ssn =
  ? ( x : { 'neg, 'add })
  case x of
    { 'neg : ?Int. !Int. !EOS. End
    , 'add : ?Int. ?Int. !Int. !EOS. End
    }

val lServer1 (c : TServer) : End =
	let < l , c > = recv c in
	let < x , c > = recv c in
	case l of
	{ 'neg :
	  let c = send c (-x) in
	  send c 'EOS
	, 'add :
	  let < y , c > = recv c in
	  let c = send c (x + y) in
	  send c 'EOS
	}
